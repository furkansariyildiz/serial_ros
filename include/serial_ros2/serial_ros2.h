#ifndef SERIAL_H
#define SERIAL_H

#include <rclcpp/rclcpp.hpp>
#include <iostream>
#include <string>
#include <cstring>
#include <fcntl.h>
#include <termios.h>
#include <unistd.h>


using namespace std;

class Serial
{
    private:
        int serial_port_;
        int baudrate_;


    protected:

    public:
        /**
         * @brief Constructor of Serial Port Class. 
         * @param port_name (std::string): Name of the serial port string type.
         * @param baudrate (int): Baudrate of the serial port int type.
        */
        Serial(string port_name, int baudrate);


        /**
         * @brief Destructor of Serial Port Class.
         * @param void
        */
        ~Serial(void);


        /**
         * @brief Function to open serial port. Returns -1 or 0 based on port opening.
         * @param void
         * @return int
        */
        int openSerialPort(void);


        /**
         * @brief Function to prepare serial port config. Returns -1 or 0 based on port config.
         * @param void
         * @return int
        */
        int prepareSerialPort(void);


        /**
         * @brief Function to read serial port. Returns string data which is generated by the serial port.
         * @param character_size (int) Size of the character_size to define readed byte size
         * @return data (string) 
        */
        string readSerialPort(int character_size);


        /**
         * @brief Function to write serial port. Returns -1 or 0 based on writing port.
         * @param data (string) Data which will be readed to serial string type.
         * @return -1 or 0 (int)
        */
        int writeSerialPort(string data);


        /**
         * @brief TTY struct termios for serial port.
        */
        struct termios _tty;


        /**
         * @brief Serial port int type.
        */
        int _serial_port;


        /**
         * @brief Port Name string type. It should be like "/dev/ttyACMx" or "/dev/ttyUSBx"
        */
        string _port_name;
        

        /**
         * @brief Baudrate of the serial port. B9600, B14400, B19200, B115200
        */
        int _baudrate;


        /**
         * @brief Readed byte from serial port. 
        */
        int _bytes = 0;


        /**
         * @brief Buffer which will be filled from serial port.
        */
        char _buffer[256];


        /**
         * @brief Readed data from serial port. It is working like; _readed_data = _readed_data + string(_buffer, _bytes)
        */
        string _readed_data = "";



};

#endif